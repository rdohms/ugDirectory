<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property string $name
 * @property string $description
 * @property string $logo
 * @property string $url
 * @property string $area_coords
 * @property integer $user_responsible
 * @property integer $state
 * @property timestamp $last_check
 * @property string $scope
 * @property $Admins
 * @property $Responsible
 * @property $Venues
 * @property $ActivitySources
 */
abstract class BaseGroup extends Doctrine_Record
{
  public function setTableDefinition()
  {
    $this->setTableName('groups');
    $this->hasColumn('name', 'string', 200, array('type' => 'string', 'length' => '200'));
    $this->hasColumn('description', 'string', null, array('type' => 'string'));
    $this->hasColumn('logo', 'string', 200, array('type' => 'string', 'length' => '200'));
    $this->hasColumn('url', 'string', 150, array('type' => 'string', 'length' => '150'));
    $this->hasColumn('area_coords', 'string', 255, array('type' => 'string', 'length' => '255'));
    $this->hasColumn('user_responsible', 'integer', null, array('type' => 'integer'));
    $this->hasColumn('state', 'integer', 1, array('type' => 'integer', 'length' => '1'));
    $this->hasColumn('last_check', 'timestamp', null, array('type' => 'timestamp'));
    $this->hasColumn('scope', 'string', 15, array('type' => 'string', 'length' => '15'));
  }

  public function setUp()
  {
    $this->hasMany('Admin as Admins', array('local' => 'id',
                                            'foreign' => 'group_id'));

    $this->hasOne('User as Responsible', array('local' => 'user_responsible',
                                               'foreign' => 'id'));

    $this->hasMany('Venue as Venues', array('local' => 'id',
                                            'foreign' => 'group_id'));

    $this->hasMany('ActivitySource as ActivitySources', array('local' => 'id',
                                                              'foreign' => 'group_id'));

    $timestampable0 = new Doctrine_Template_Timestampable(array('created' => array('name' => 'created_at', 'type' => 'timestamp'), 'updated' => array('name' => 'updated_at', 'type' => 'timestamp')));
    $this->actAs($timestampable0);
  }
}